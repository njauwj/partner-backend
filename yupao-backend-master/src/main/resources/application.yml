spring:
  #profiles:指定配置
  profiles:
    active: dev
  application:
    name: yupao-backend
  # DataSource Config
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/yupao?serverTimezone=Asia/Shanghai
    username: root
    password: "010622"
  # session 失效时间（分钟） store-type 将session存储到redis
  session:
    timeout: 86400
    store-type: redis
  #springboot2.6以后将springMvc默认路径匹配策略从ANT_PATH_MATCHER更改为PathPatternParser，集成swagger要注意
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  # redis 配置
  redis:
    port: 6379
    host: 1.15.145.217
    database: 1
    password: "010622"
server:
  port: 8080
  servlet:
    context-path: /api
#在 Spring Boot 项目中，Session Cookie Domain 是用来设置会话 Cookie 的域名，它指定了哪些网站可以共享该 Cookie。
#具体来说，当客户端浏览器向服务器发送请求时，会检查请求中的 Cookie 是否符合要求，如果符合，则会将该 Cookie 发送给服务器。
#通过设置 Session Cookie Domain，可以使得在同一域名下的多个子域名之间共享 Session Cookie，从而实现跨子域名的会话管理。
#例如，如果你的网站有多个子域名（如www.example.com、api.example.com、admin.example.com等），并且你想要实现用户登录状态的共享，那么你可以将 Session Cookie Domain 设置为".example.com"，这样所有子域名都可以共享该 Cookie。
#需要注意的是，如果 Session Cookie Domain 设置不当，可能会导致安全风险。如果将其设置为顶级域名（如".com"、".net"等），则所有使用该域名的网站都可以共享该 Cookie，这将导致用户的登录状态被恶意网站窃取。
#因此，建议将 Session Cookie Domain 设置为当前网站的二级域名或更低级别的域名。
    session:
      cookie:
        domain: localhost
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
